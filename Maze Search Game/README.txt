In this program you will get a chance to use recursion to solve a problem that could not be done just as easily or more efficiently with a loop. It is possible to solve this problem without recursion, but it would somewhat more complicated, and would result in the same big-O space and time requirements as a recursive solution.
Backtracking algorithms for solving a problem are ones that attempt to complete a search for a solution by constructing partial solutions. The algorithm then attempts to extend a partial solution toward completion, but if it gets stuck, the algorithm backs up (backtracks) by removing the most recently constructed part of the solution, and trying another possibility. Backtracking problems lend themselves well to recursion. In this program you'll use backtracking to try to find a path through a maze.